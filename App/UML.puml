@startuml
'https://plantuml.com/class-diagram

class MainActivity {
    #onCreate(savedInstanceState: Bundle)
}

class ProfileActivity {
    -TextView firstName
    -TextView lastName
    -TextView contact
    -ImageView profPic
    -UserController userController
    -DatabaseController databaseController
    -TabLayout tabLayout
    -FrameLayout frameLayout
    #onCreate(savedInstanceState: Bundle)
}

class UserController {
    -User user
    -String defaultUUID
    -String prefName
    +User getUser()
    +setUser(user: User)
    +String getUserID(context: Context)
    +saveUUID(context: Context, id: String)
    +selectImage(activity: Activity)
    +selectImage(fragment: Fragment)
    +editProfile(firstName: String, lastName: String,
    contact: String, pictureUri: Uri)
    +checkIn(event: Event)
}

class DatabaseController {
    -FirebaseFirestore db
    -FirebaseStorage storage
    +putUserToFirestore(user: User)
    +updateWithUserFromFirestore(id: String, userController: UserController)
    +getUserFromFirestore(id: String, callback: UserCallback)
    +uploadProfilePicture(picture: Uri, user: User)
    +updateWithProfPictureFromWeb(user: User)
    +getUserProfilePicture(userID: String, callback: ImageUriCallback)
    +putEventPosterToFirestore(String: eventID, Uri imageUri)
    +putEventCheckInQRCodeToFirestore(String: eventID, Uri imageUri)
    +putEventDesscriptionQRCodeToFirestore(String: eventID, Uri imageUri)
    +getEventPoster(String eventID, callback: EventImageUriCallbacks)
    +getEventCheckInQRCode(String eventID, callback: EventImageUriCallbacks)
    +getEventDescriptionQRCode(String eventID, callback: EventImageUriCallbacks)
    +pushEventToFirestore(event: Event)
    +getEventFromFirestore(eventID: String, callback: GetEventCallback)
    +getAllEventsFromFirestore(callback: GetAllEventsCallback)
}

class Event {
    -String id
    -String name
    -int capacity
    -Collection<String> signedUpUsers
    -Collection<String> checkedInUsers
    -Uri eventPoster
    -Uri checkInQrCodeUri
    -Uri descriptionQRCodeUri
    -Object location
    -Date date
    -String creatorUUID
    -String description
    +String getCreatorUUID()
    +setCreator(creatorUUID: string)
    +String getUuid()
    +setUuid(id: String)
    +String getName()
    +setName(name: String)
    +setLocation(String location)
    +int getCapacity()
    +setCapacity(capacity: int)
    +boolean isCapped()
    +boolean isFull()
    +addCheckedInUser(uuid: String)
    +Collection<String> getCheckedInUsersUUIDs()
    +boolean isUserCheckedIn(user: User)
    +addSignedUpUser(uuid: String)
    +Collection<String> getSignedUpUsersUUIDs()
    +boolean isUserSignedUp(user: User)
    +setCheckInQRCodeUri(Uri checkInQrCodeUri)
    +Uri getCheckInQRCodeUri()
    +setDescriptionQRCodeUri(Uri getDescriptionQRCodeUri)
    +Uri getDescriptionQRCodeUri()
}

class EventController{
  -Event event
  +checkInUser(uuid: String)
  +signUpUser(uuid: String)
}


class User {
    -String profilePicPath
    -String id
    -String firstName
    -String lastName
    -String contact
    -ArrayList<String> attendingEvents
    -ArrayList<String> hostingEvents
    -Uri picture
    -String imgUrl
    +String getId()
    +setId(id: String)
    +String getFirstName()
    +setFirstName(firstName: String)
    +String getLastName()
    +setLastName(lastName: String)
    +ArrayList<String> getAttendingEvents()
    +ArrayList<String> getHostingEvents()
    +String getContact()
    +setContact(contact: String)
    +Uri getPicture()
    +setPicture(picture: Uri)
    +String getImgUrl()
    +setImgUrl(imgUrl: String)
}

class CheckInFragment {
    -DatabaseController databaseController
    -ActivityResultLauncher<ScanOptions> scanLauncher
    -processResult(ScanIntentResult: result)
}

checkInFragment "1" o-- "1" DatabaseController : has

CheckInFragment <|.. ScanButtonListener : implements
CheckInFragment <|.. GetEventCallback : implements

class Admin

class EditProfileFragment {
    -OnProfileUpdateListener profileUpdateListener
    -EditText firstName
    -EditText lastName
    -EditText contact
    -ImageView profPic
    -UserController userController
    +setOnProfileUpdateListener(listener: OnProfileUpdateListener)
}


class Fragment
class DialogFragment

interface OnProfileUpdateListener {
    +onProfileUpdate(newFirstName: String, newLastName: String, newContact: String, newPicture: Uri)
}

class EventArrayAdapter {
    -ArrayList<Event> events
    -Context context
    +getView(position: int, convertView: View, parent: ViewGroup
}

interface GetAllEventsCallback {
    +onGetAllEventsCallback(event: Event)
}

class HomeFragment {
    -DatabaseController dbController
    -ArrayList<Event> events
    -ListView eventsList
    -EventArrayAdapter eventsArrayAdapter
}

Fragment <|-- ProfileFragment
Fragment <|-- CheckInFragment
Fragment <|-- EventCreationFragment
Fragment <|-- EventDetailsFragment
Fragment <|-- HomeFragment

DialogFragment <|-- EditProfileFragmentProfile
DialogFragment <|-- QRCodeFragment


AppCompatActivity <|-- MainActivity : extends
AppCompatActivity <|-- ProfileActivity : extends

ProfileActivity <|.. OnProfileUpdateListener : implements

UserController "1" o-- "1" ProfileActivity : has
UserController "0...1" o-- "1" User : has

DatabaseController -- User 
DatabaseController -- UserController 

EditProfileFragment o-- UserController

Event "*" o-- "*" User

User <|-- Admin : extends

skinparam linetype ortho
@enduml
